<project name="graal-som" basedir="." default="compile"
         xmlns:unless="ant:unless"
         xmlns:if="ant:if"
>

    <property name="jvmci.version" value="jvmci-20.2-b03"/>
    <property name="jdk8.version" value="262+10"/>

    <macrodef name="travis">
        <attribute name="target"/>
        <attribute name="start" default=""/>
        <sequential>
            <echo message="travis_fold:start:@{target}${line.separator}@{start}${line.separator}"
                  unless:blank="@{start}" if:true="${env.TRAVIS}"/>
            <echo message="travis_fold:end:@{target}${line.separator}" if:blank="@{start}" if:true="${env.TRAVIS}"/>
        </sequential>
    </macrodef>

    <condition property="is.atLeastJava9" value="true" else="false">
        <or>
            <matches string="${java.version}" pattern="^9"/>
            <matches string="${java.version}" pattern="^1[0-9]"/>
        </or>
    </condition>
    <condition property="kernel" value="darwin-amd64" else="linux-amd64">
        <os family="mac"/>
    </condition>
    <condition property="home.ext" value="/Contents/Home" else="">
        <os family="mac"/>
    </condition>

    <travis target="env" start="Environment"/>
    <echo>
        ant.java.version: ${ant.java.version}
        java.version: ${java.version}
        is.atLeastJava9: ${is.atLeastJava9}
        kernel: ${kernel}
        env.TRAVIS: ${env.TRAVIS}
    </echo>
    <travis target="env"/>

    <property name="src.dir" value="src"/>
    <property name="src_gen.dir" value="src_gen"/>
    <property name="lib.dir" location="libs"/>
    <property name="unit.dir" value="tests/som"/>
    <property name="corelib.dir" location="core-lib"/>
    <property name="build.dir" value="build"/>
    <property name="classes.dir" value="${build.dir}/classes"/>

    <property name="graal.dir" location="${lib.dir}/truffle/compiler"/>
    <property name="truffle.dir" location="${lib.dir}/truffle/truffle"/>
    <property name="sdk.dir" location="${lib.dir}/truffle/sdk"/>
    <property name="tools.dir" location="${lib.dir}/truffle/tools"/>
    <property name="svm.dir" location="${lib.dir}/truffle/substratevm"/>
    <property name="compiler.build" location="${graal.dir}/mxbuild/dists/jdk1.8"/>
    <property name="sdk.build" location="${sdk.dir}/mxbuild/dists/jdk1.8"/>
    <property name="tools.build" location="${tools.dir}/mxbuild/dists/jdk1.8"/>
    <property name="svm.build" location="${svm.dir}/mxbuild/dists/jdk1.8"/>
    <property name="truffle.build" location="${truffle.dir}/mxbuild/dists/jdk1.8"/>
    <property name="vm.dir" location="${lib.dir}/truffle/vm"/>

    <property name="checkstyle.version" value="8.31"/>
    <property name="jvmci.home" location="${lib.dir}/jvmci${home.ext}"/>
    <property name="junit.version" value="4.12"/>

    <property name="mx.cmd" value="../../mx/mx"/>

    <property environment="env"/>

    <path id="boot.cp">
        <pathelement location="${sdk.build}/graal-sdk.jar"/>
        <pathelement location="${truffle.build}/truffle-api.jar"/>
        <pathelement location="${lib.dir}/affinity.jar"/>
        <pathelement location="${lib.dir}/slf4j-api.jar"/>
        <pathelement location="${lib.dir}/slf4j-simple.jar"/>
        <pathelement location="${lib.dir}/jna-platform.jar"/>
        <pathelement location="${lib.dir}/jna.jar"/>
    </path>

    <path id="common.cp">
        <pathelement location="${classes.dir}"/>
        <pathelement location="${svm.build}/svm-core.jar"/>
        <pathelement location="${tools.build}/truffle-profiler.jar"/>
    </path>

    <path id="project.classpath">
        <path refid="boot.cp"/>
        <path refid="common.cp"/>
        <pathelement location="${unit.dir}"/>
        <pathelement location="${sdk.build}/word-api.jar"/>
        <pathelement location="${sdk.build}/polyglot-tck.jar"/>
        <pathelement location="${truffle.build}/truffle-debug.jar"/>
        <pathelement location="${truffle.build}/truffle-dsl-processor.jar"/>
        <pathelement location="${truffle.build}/truffle-tck.jar"/>
        <pathelement location="${lib.dir}/junit-${junit.version}.jar"/>
        <pathelement location="${lib.dir}/hamcrest-core-1.3.jar"/>
    </path>

    <available file="${truffle.dir}" type="dir" property="truffle.present"/>
    <available file="${jvmci.home}" type="dir" property="jvmci.home.present"/>

    <condition property="truffle.and.jvmci.present">
        <and>
            <available file="${truffle.dir}"/>
            <available file="${jvmci.home}"/>
        </and>
    </condition>

    <target name="clean" description="Remove build directories and generated code">
        <travis target="clean" start="clean"/>

        <delete dir="${build.dir}"/>
        <delete dir="${src_gen.dir}"/>

        <travis target="clean"/>
    </target>

    <target name="clean-truffle" if="truffle.and.jvmci.present">
        <travis target="clean-truffle" start="clean-truffle"/>

        <exec executable="${mx.cmd}" dir="${svm.dir}">
            <arg value="--dynamicimports"/>
            <arg value="../truffle,../tools,../compiler,../sdk"/>
            <arg value="clean"/>
            <env key="JAVA_HOME" value="${jvmci.home}"/>
        </exec>

        <travis target="clean-truffle"/>
    </target>

    <target name="clobber" description="Do clean, and also clean truffle build" depends="clean,clean-truffle">
        <travis target="clobber" start="clobber"/>

        <exec executable="${mx.cmd}" dir="${svm.dir}" failonerror="true" if:true="${truffle.and.jvmci.present}">
            <arg value="--dynamicimports"/>
            <arg value="../truffle,../tools,../compiler,../sdk"/>
            <arg value="fsckprojects"/>
            <env key="JAVA_HOME" value="${jvmci.home}"/>
        </exec>

        <travis target="clobber"/>
    </target>

    <target name="truffle-submodule"
            unless="truffle.present">
        <exec executable="./.gitloadmodules" failonerror="true">
        </exec>
    </target>

    <target name="truffle-libs" unless="skip.truffle" depends="jvmci-libs,truffle-submodule">
        <travis target="truffle-libs" start="Build Truffle"/>
        <exec executable="${mx.cmd}" dir="${svm.dir}" failonerror="true">
            <arg value="--dynamicimports"/>
            <arg value="../truffle,../tools,../compiler,../sdk"/>
            <arg value="build"/>
            <arg value="--no-native" unless:true="${build.native}"/>
            <env key="JAVA_HOME" value="${jvmci.home}"/>
        </exec>
        <travis target="truffle-libs"/>
    </target>

    <target name="libgraal-jdk" depends="jvmci-libs,core-lib">
        <travis target="libgraal-jdk" start="Build LibGraal-enabled JDK"/>
        <exec executable="${mx.cmd}" dir="${vm.dir}" failonerror="true">
            <env key="JAVA_HOME" value="${jvmci.home}"/>
            <!-- REM: This needs to match ./som -->
            <env key="DYNAMIC_IMPORTS" value="/substratevm,/tools,/truffle,/sdk,/compiler"/>
            <env key="FORCE_BASH_LAUNCHERS" value="true"/>
            <env key="DISABLE_LIBPOLYGLOT" value="true"/>
            <env key="EXCLUDE_COMPONENTS" value="svmag,nju,nic,ni,nil"/>
            <arg line="build"/>
        </exec>
        <travis target="libgraal-jdk"/>
    </target>

    <target name="jvmci-libs">
        <get src="https://github.com/graalvm/graal-jvmci-8/releases/download/${jvmci.version}/openjdk-8u${jdk8.version}-${jvmci.version}-${kernel}.tar.gz"
             usetimestamp="true"
             dest="${lib.dir}/jvmci.tar.gz"/>
        <mkdir dir="${lib.dir}/jvmci"/>
        <exec executable="tar" dir="${basedir}" failonerror="true">
            <arg line="-C ${lib.dir}/jvmci -xzf ${lib.dir}/jvmci.tar.gz --strip 1"/>
        </exec>
    </target>

    <target name="jvmci-home">
        <echo>${jvmci.home}</echo>
    </target>

    <target name="check-core-lib-available">
        <available file="core-lib/.git" property="core-lib.present"/>
    </target>
    <target name="core-lib" depends="check-core-lib-available"
            unless="core-lib.present">
        <exec executable="git">
            <arg value="submodule"/>
            <arg value="update"/>
            <arg value="--init"/>
        </exec>
    </target>


    <target name="libs" depends="core-lib, truffle-libs" unless="skip.libs">
        <mkdir dir="${lib.dir}"/>
        <get src="https://repo1.maven.org/maven2/junit/junit/${junit.version}/junit-${junit.version}.jar"
             usetimestamp="true"
             dest="${lib.dir}/junit-${junit.version}.jar"/>
        <get src="https://repo1.maven.org/maven2/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar"
             usetimestamp="true"
             dest="${lib.dir}/hamcrest-core-1.3.jar"/>
        <get src="https://repo1.maven.org/maven2/net/openhft/affinity/3.2.3/affinity-3.2.3.jar"
             usetimestamp="true"
             dest="${lib.dir}/affinity.jar"/>
        <get src="https://repo1.maven.org/maven2/org/slf4j/slf4j-api/1.7.30/slf4j-api-1.7.30.jar"
             usetimestamp="true"
             dest="${lib.dir}/slf4j-api.jar"/>
        <get src="https://repo1.maven.org/maven2/org/slf4j/slf4j-nop/1.7.30/slf4j-nop-1.7.30.jar"
             usetimestamp="true"
             dest="${lib.dir}/slf4j-nop.jar"/>
        <get src="https://repo1.maven.org/maven2/org/slf4j/slf4j-simple/1.7.30/slf4j-simple-1.7.30.jar"
             usetimestamp="true"
             dest="${lib.dir}/slf4j-simple.jar"/>
        <get src="https://repo1.maven.org/maven2/net/java/dev/jna/jna-platform/5.5.0/jna-platform-5.5.0.jar"
             usetimestamp="true"
             dest="${lib.dir}/jna-platform.jar"/>
        <get src="https://repo1.maven.org/maven2/net/java/dev/jna/jna/5.5.0/jna-5.5.0.jar"
             usetimestamp="true"
             dest="${lib.dir}/jna.jar"/>
    </target>

    <target name="eclipseformat">
        <travis target="eclipseformat" start="Format code with Eclipse"/>
        <pathconvert pathsep=" " property="javafiles">
            <fileset dir="${src.dir}">
                <include name="**/*.java"/>
            </fileset>
            <fileset dir="${unit.dir}">
                <include name="**/*.java"/>
            </fileset>
            <fileset dir="${corelib.dir}">
                <include name="**/*.java"/>
            </fileset>
        </pathconvert>
        <exec executable="${env.ECLIPSE_EXE}" dir="${basedir}">
            <arg value="-nosplash"/>
            <arg value="-application"/>
            <arg value="-consolelog"/>
            <arg value="-data"/>
            <arg value="${basedir}"/>
            <arg value="-vm"/>
            <arg value="${env.JAVA_HOME}/bin/java"/>
            <arg value="org.eclipse.jdt.core.JavaCodeFormatter"/>
            <arg value="-config"/>
            <arg value="${basedir}/.settings/org.eclipse.jdt.core.prefs"/>
            <arg line="${javafiles}"/>
        </exec>
        <travis target="eclipseformat"/>
    </target>

    <target name="eclipseformat-check" depends="eclipseformat">
        <travis target="eclipseformat-check" start="Check Eclipse Format"/>
        <exec executable="git" dir="${basedir}">
            <arg value="status"/>
            <arg value="*.java"/>
        </exec>
        <exec executable="git" dir="${basedir}" failonerror="true">
            <arg value="diff-index"/>
            <arg value="--quiet"/>
            <arg value="--exit-code"/>
            <arg value="--ignore-submodules"/>
            <arg value="HEAD"/>
        </exec>
        <travis target="eclipseformat-check"/>
    </target>

    <target name="checkstyle-jar">
        <travis target="checkstyle-jar" start="Get Checkstyle Jar"/>
        <get src="https://github.com/checkstyle/checkstyle/releases/download/checkstyle-${checkstyle.version}/checkstyle-${checkstyle.version}-all.jar"
             usetimestamp="true"
             dest="${lib.dir}/checkstyle-${checkstyle.version}-all.jar"/>
        <travis target="checkstyle-jar"/>
    </target>

    <target name="checkstyle" depends="checkstyle-jar" description="Check Code with Checkstyle">
        <travis target="checkstyle" start="Run Checkstyle"/>
        <taskdef resource="com/puppycrawl/tools/checkstyle/ant/checkstyle-ant-task.properties"
                 classpath="${lib.dir}/checkstyle-${checkstyle.version}-all.jar"/>
        <checkstyle config=".checkstyle_checks.xml">
            <fileset dir="${src.dir}" includes="**/*.java"/>
            <fileset dir="${unit.dir}" includes="**/*.java"/>
            <fileset dir="${corelib.dir}" includes="**/*.java"/>
            <formatter type="plain"/>
        </checkstyle>
        <travis target="checkstyle"/>
    </target>

    <target name="java8-on-java9" description="Support Java 9 or later" if="${is.atLeastJava9}">
        <travis target="java89" start="Support Java 9"/>
        <mkdir dir="${classes.dir}"/>
        <javac includeantruntime="false" srcdir="${lib.dir}/java8" destdir="${classes.dir}" debug="true">
            <compilerarg line="--release 8"/>
        </javac>
        <travis target="java89"/>
    </target>

    <target name="ideinit" depends="libs">
        <exec executable="${mx.cmd}" dir="${truffle.dir}">
            <env key="JAVA_HOME" value="${jvmci.home}"/>
            <arg value="--dynamicimports"/>
            <arg value="../truffle,../sdk"/>
            <arg value="eclipseinit"/>
        </exec>
    </target>

    <target name="intellijinit" depends="libs">
        <exec executable="${mx.cmd}" dir="${truffle.dir}">
            <env key="JAVA_HOME" value="${jvmci.home}"/>
            <arg value="--dynamicimports"/>
            <arg value="../truffle,../sdk"/>
            <arg value="intellijinit"/>
        </exec>
    </target>

    <target name="compile-graalSOM" description="Compile GraalSOM">
        <travis target="compile" start="compile"/>

        <mkdir dir="${build.dir}"/>
        <mkdir dir="${classes.dir}"/>
        <mkdir dir="${src_gen.dir}"/>
        <javac includeantruntime="false" srcdir="${src.dir}" destdir="${classes.dir}" debug="true">
            <classpath refid="project.classpath"/>
            <compilerarg line="-s ${src_gen.dir}"/>
            <compilerarg line="-XDignore.symbol.file"/>
            <compilerarg line="-Xlint:all"/>
            <compilerarg line="--release 8" if:true="${is.atLeastJava9}"/>
        </javac>
        <javac includeantruntime="false" srcdir="${src_gen.dir}" destdir="${classes.dir}" debug="true">
            <classpath refid="project.classpath"/>
            <compilerarg line="-s ${src_gen.dir}"/>
            <compilerarg line="-Xlint:all"/>
            <compilerarg line="--release 8" if:true="${is.atLeastJava9}"/>
        </javac>
        <javac includeantruntime="false" srcdir="${unit.dir}" destdir="${classes.dir}" debug="true">
            <classpath refid="project.classpath"/>
            <compilerarg line="--release 8" if:true="${is.atLeastJava9}"/>
        </javac>

        <travis target="compile"/>
    </target>

    <target name="compile-for-jar" depends="truffle-libs,libs,compile-graalSOM"
            description="Compile GraalSOM without LibGraal">
    </target>

    <target name="compile" depends="libgraal-jdk, libs, compile-graalSOM" description="Compile GraalSOM with LibGraal"/>

    <target name="jar" depends="compile-for-jar" description="Package as JAR">
        <jar destfile="${build.dir}/graal-som.jar" basedir="${classes.dir}"></jar>
    </target>

    <target name="unit-tests" depends="compile-for-jar" description="Execute tests">
        <junit haltonerror="false" haltonfailure="false" failureproperty="test.failed"
               outputtoformatters="true">
            <jvmarg value="-ea"/>
            <jvmarg value="-esa"/>
            <classpath refid="project.classpath"/>
            <batchtest fork="yes" filtertrace="false">
                <fileset dir="tests">
                    <include name="**/*Test*.java"/>
                </fileset>
            </batchtest>
            <formatter type="brief" usefile="false"/>
        </junit>

        <java classname="som.Launcher" fork="true" failonerror="true">
            <classpath refid="project.classpath"/>
            <jvmarg value="-ea"/>
            <jvmarg value="-esa"/>
            <arg line="-cp Smalltalk TestSuite/TestHarness.som "/>
        </java>
        <fail message="Basic tests failed." if="test.failed"/>
    </target>

    <target name="som-tests" depends="compile-for-jar" description="Test som script">
        <travis target="som-test" start="SOM Test"/>

        <exec executable="./som" failonerror="true">
            <arg value="-G"/>
            <arg value="--no-libgraal"/>
            <arg value="TestSuite/TestHarness.som"/>

        </exec>

        <travis target="som-test"/>
    </target>

    <target name="tests" depends="som-tests,unit-tests"/>

</project>
